{"version":3,"sources":["components/Categories.js","components/NewsItem.js","components/NewsList.js","lib/usePromise.js","pages/NewsPage.js","App.js","reportWebVitals.js","index.js"],"names":["categories","name","text","CategoriesBlock","styled","div","Category","NavLink","Categories","map","c","activeClassName","exact","to","NewsItemBlock","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList","category","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","process","usePromise","query","axios","get","response","articles","data","NewsPage","match","params","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f9d63ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst categories = [\r\n  {\r\n    name: 'all',\r\n    text: '전체보기',\r\n  },\r\n  {\r\n    name: 'business',\r\n    text: '비즈니스',\r\n  },\r\n  {\r\n    name: 'entertainment',\r\n    text: '엔터테인먼트',\r\n  },\r\n  {\r\n    name: 'health',\r\n    text: '건강',\r\n  },\r\n  {\r\n    name: 'science',\r\n    text: '과학',\r\n  },\r\n  {\r\n    name: 'sports',\r\n    text: '스포츠',\r\n  },\r\n  {\r\n    name: 'technology',\r\n    text: '기술',\r\n  },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n  display: flex;\r\n  padding: 1rem;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n`;\r\n\r\nconst Category = styled(NavLink)`\r\n  font-size: 1.125rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  padding-bottom: 0.25rem;\r\n\r\n  &:hover {\r\n    color: #495057;\r\n  }\r\n\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid #22b8cf;\r\n    color: #22b8cf;\r\n    &:hover {\r\n      color: #3bc9db;\r\n    }\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Categories = () => {\r\n  return (\r\n    <div>\r\n      <CategoriesBlock>\r\n        {categories.map((c) => (\r\n          <Category\r\n            key={c.name}\r\n            activeClassName=\"active\"\r\n            exact={c.name === 'all'}\r\n            to={c.name === 'all' ? '/' : `/${c.name}`}\r\n          >\r\n            {c.text}\r\n          </Category>\r\n        ))}\r\n      </CategoriesBlock>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NewsItemBlock = styled.div`\r\n  display: flex;\r\n  .thumbnail {\r\n    margin-right: 1rem;\r\n    img {\r\n      display: block;\r\n      width: 160px;\r\n      height: 100px;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n  .contents {\r\n    h2 {\r\n      margin: 0;\r\n      a {\r\n        color: black;\r\n      }\r\n    }\r\n    p {\r\n      margin: 0;\r\n      line-height: 1.5;\r\n      margin-top: 0.5rem;\r\n      white-space: normal;\r\n    }\r\n  }\r\n  & + & {\r\n    margin-top: 3rem;\r\n  }\r\n`;\r\n\r\nconst NewsItem = ({ article }) => {\r\n  const { title, description, url, urlToImage } = article;\r\n  return (\r\n    <NewsItemBlock>\r\n      {urlToImage && (\r\n        <div className=\"thumbnail\">\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src={urlToImage} alt=\"thumbnail\" />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"contents\">\r\n        <h2>\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {title}\r\n          </a>\r\n        </h2>\r\n        <p>{description}</p>\r\n      </div>\r\n    </NewsItemBlock>\r\n  );\r\n};\r\n\r\nexport default NewsItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from '../../node_modules/axios/index';\r\nimport usePromise from '../lib/usePromise';\r\nimport NewsItem from './NewsItem';\r\n\r\nconst NewsListBlock = styled.div`\r\n  box-sizing: border-box;\r\n  padding-bottom: 3rem;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  margin-top: 2rem;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n  }\r\n`;\r\n\r\n// const sampleArticle = {\r\n//   title: '제목',\r\n//   description: '내용',\r\n//   url: 'https://google.com',\r\n//   urlToImage: 'https://via.placeholder.com/160',\r\n// };\r\n\r\nconst NewsList = ({ category }) => {\r\n  const [loading, response, error] = usePromise(() => {\r\n    const query = category === 'all' ? '' : `&category=${category}`;\r\n    return axios.get(\r\n      `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=fd4a36f8735b482ab074a6aecad5c80b`,\r\n    );\r\n  }, [category]);\r\n\r\n  // 대기 중일 때\r\n  if (loading) {\r\n    return <NewsListBlock>대기 중...</NewsListBlock>;\r\n  }\r\n  // 아직 response 값이 설정되지 않았을 때\r\n  if (!response) {\r\n    return null;\r\n  }\r\n\r\n  // 에러가 발생했을 때\r\n  if (error) {\r\n    return <NewsListBlock>에러 발생!</NewsListBlock>;\r\n  }\r\n\r\n  // response 값이 유효할 때\r\n  const { articles } = response.data;\r\n  return (\r\n    <NewsListBlock>\r\n      {articles.map((article) => (\r\n        <NewsItem key={article.url} article={article} />\r\n      ))}\r\n    </NewsListBlock>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function usePromise(promiseCreator, deps) {\r\n  // 대기 중/완료/실패에 대한 상태 관리\r\n  const [loading, setLoading] = useState(false);\r\n  const [resolved, setResolved] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const process = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const resolved = await promiseCreator();\r\n        setResolved(resolved);\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    process();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, deps);\r\n\r\n  return [loading, resolved, error];\r\n}\r\n","import React from 'react';\r\nimport Categories from '../components/Categories';\r\nimport NewsList from '../components/NewsList';\r\n\r\nconst NewsPage = ({ match }) => {\r\n  // 카테고리가 선택되지 않았으면 기본값 all로 사용\r\n  const category = match.params.category || 'all';\r\n\r\n  return (\r\n    <>\r\n      <Categories />\r\n      <NewsList category={category} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsPage;\r\n","import React, { useState, useCallback } from 'react';\nimport { Route } from 'react-router-dom';\nimport NewsPage from './pages/NewsPage';\nconst App = () => {\n  return <Route path=\"/:category?\" component={NewsPage} />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}